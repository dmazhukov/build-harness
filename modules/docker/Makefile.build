## Use DOCKER_IMAGE_NAME envvar to specify docker image with tags
## User ARGS to pass arguments
DOCKER_BUILD_PATH ?= .
DOCKER_BUILD_FLAGS ?= --no-cache
DOCKER_BUILD_ARGS ?= $(shell for arg in $$ARGS; do \
		printf -- "--build-arg %s=%s " "$$arg" "$${!arg}"; \
	done)
DOCKER_BUILD_VARS ?= $(shell for arg in $$VARS; do \
		printf -- "--build-arg %s " "$$arg"; \
	done)
DOCKER_FILE ?= ./Dockerfile
DOCKER_IMAGE_NAME ?= $(TARGET_DOCKER_REGISTRY)/$(IMAGE_NAME)

## Build docker image $(DOCKER_IMAGE_NAME) from $(DOCKER_FILE) with [$(DOCKER_BUILD_FLAGS)] build flags using $(VARS) and $(ARGS)
docker/build: $(DOCKER)
	$(call assert-set,DOCKER)
	$(call assert-set,DOCKER_IMAGE_NAME)
ifeq ($(TRAVIS),true)
	git ls-files -s | awk '{print $$1" "$$4}' | grep '^10' | sed s'/^..//' | xargs --no-run-if-empty -n 2 echo chmod  | bash -x
endif
	echo "Building $(DOCKER_IMAGE_NAME) from $(DOCKER_FILE) with [$(DOCKER_BUILD_FLAGS)] build flags..." 
	$(DOCKER) build $(DOCKER_BUILD_FLAGS) $(DOCKER_BUILD_ARGS) $(DOCKER_BUILD_VARS) -t $(DOCKER_IMAGE_NAME):$(TARGET_VERSION) -f $(DOCKER_FILE) $(DOCKER_BUILD_PATH)


## Promote $SOURCE_DOCKER_REGISTRY/$IMAGE_NAME:$SOURCE_VERSION to $TARGET_DOCKER_REGISTRY/$IMAGE_NAME:$TARGET_VERSION
docker/image/promote/local:
	$(call assert-set,DOCKER)
	$(call assert-set,IMAGE_NAME)
	$(call assert-set,SOURCE_DOCKER_REGISTRY)
	$(call assert-set,SOURCE_VERSION)
	$(call assert-set,TARGET_DOCKER_REGISTRY)
	$(call assert-set,TARGET_VERSION)
	@$(DOCKER) tag $(SOURCE_DOCKER_REGISTRY)/$(IMAGE_NAME):$(SOURCE_VERSION) $(TARGET_DOCKER_REGISTRY)/$(IMAGE_NAME):$(TARGET_VERSION)

## Pull $SOURCE_DOCKER_REGISTRY/$IMAGE_NAME:$SOURCE_VERSION and promote to $TARGET_DOCKER_REGISTRY/$IMAGE_NAME:$TARGET_VERSION
docker/image/promote/remote:
	$(call assert-set,DOCKER)
	$(call assert-set,IMAGE_NAME)
	$(call assert-set,SOURCE_DOCKER_REGISTRY)
	$(call assert-set,SOURCE_VERSION)
	@$(DOCKER) pull $(SOURCE_DOCKER_REGISTRY)/$(IMAGE_NAME):$(SOURCE_VERSION)
	@$(SELF) -s docker/image/promote/local

## Push $TARGET_DOCKER_REGISTRY/$IMAGE_NAME:$TARGET_VERSION
docker/image/push:
	$(call assert-set,DOCKER)
	$(call assert-set,IMAGE_NAME)
	$(call assert-set,TARGET_DOCKER_REGISTRY)
	$(call assert-set,TARGET_VERSION)
	$(DOCKER) push $(TARGET_DOCKER_REGISTRY)/$(IMAGE_NAME):$(TARGET_VERSION)
